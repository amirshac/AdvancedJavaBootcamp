package Airport;

import java.util.Stack;

public class MileageCredit {
	
	private static final float DEF_CREDIT_PER_MILE = 0.5f;
	private static final float DEF_CREDIT_PER_BONUS_MILE = 0.75f;
	private static final float DEF_BONUS_MILE_SINCE = 1000f; 
	
	private float totalCredit;
	private float totalMileage;
	
	//private Flight[] flightArray;
	private Stack<Flight> flightStack;
	private Flight latestFlight;
	private Flyer flyer;
	
	private float creditPerMile = DEF_CREDIT_PER_MILE;
	private float creditPerBonusMile = DEF_CREDIT_PER_BONUS_MILE;
	private float bonusMileSince = DEF_BONUS_MILE_SINCE;
	private float currentFlightMileage;

	
	// constructors	
	public MileageCredit() {
		flightStack = new Stack<Flight>();
		flyer = null;
		
	}

	// setters getters
	public Flight getLatestFlight() {
		return flightStack.peek();
	}

	public Flyer getFlyer() {
		return flyer;
	}

	public void setFlyer(Flyer flyer) {
		this.flyer = flyer;
	}

	// methods
	/**
	 * 
	 * @param flight
	 * @return Calculated credit for client according to mileage on flight
	 */
	private float calculateCreditAccordingToFlight(Flight flight) {
		
	}
	
	public void addFlight(Flight flight) {
		flightStack.push(flight);
		latestFlight = flight;
		
	}
}
